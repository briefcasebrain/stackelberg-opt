[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "stackelberg-opt"
version = "0.1.0"
description = "Stackelberg game-theoretic optimization for compound AI systems"
readme = "README.md"
authors = [{name = "Aansh Shah", email = "aansh.shahl@gmail.com"}]
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["optimization", "stackelberg", "game-theory", "ai", "llm", "prompt-optimization"]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "cvxpy>=1.2.0",
    "networkx>=2.6.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "litellm>=1.0.0",
    "spacy>=3.0.0",
    "sentence-transformers>=2.0.0",
    "torch>=1.9.0",
    "tenacity>=8.0.0",
    "aiofiles>=0.8.0",
    "tqdm>=4.62.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.6.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
    "pre-commit>=2.19.0",
    "twine>=4.0.0",
    "build>=0.8.0",
]

[project.urls]
Homepage = "https://github.com/aanshshah/stackelberg-opt"
Documentation = "https://stackelberg-opt.readthedocs.io"
Repository = "https://github.com/aanshshah/stackelberg-opt"
Issues = "https://github.com/aanshshah/stackelberg-opt/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=stackelberg_opt --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["stackelberg_opt"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]